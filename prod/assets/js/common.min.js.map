{"version":3,"sources":["assets/js/common.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Sample","this","message","value","console","log","Common","init","call"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,MAK5hBkB,OAAS,WACZ,QAASA,KACRpB,gBAAgBqB,KAAMD,GAEtBC,KAAKC,QAAU,sBAUhB,MAPAlB,cAAagB,IACZJ,IAAK,OACLO,MAAO,WACNC,QAAQC,IAAIJ,KAAKC,aAIZF,KAGJM,OAAS,WACZL,KAAKM,OAEND,QAAOP,WACNQ,KAAM,WACLH,QAAQC,IAAI,iBAId,WACC,GAAIC,SACJ,GAAIN,SAASQ","file":"common.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//! This is common.js\nvar Sample = function () {\n\tfunction Sample() {\n\t\t_classCallCheck(this, Sample);\n\n\t\tthis.message = 'called Sample Class';\n\t}\n\n\t_createClass(Sample, [{\n\t\tkey: 'call',\n\t\tvalue: function call() {\n\t\t\tconsole.log(this.message);\n\t\t}\n\t}]);\n\n\treturn Sample;\n}();\n\nvar Common = function Common() {\n\tthis.init();\n};\nCommon.prototype = {\n\tinit: function init() {\n\t\tconsole.log('init common');\n\t}\n};\n\n(function () {\n\tnew Common();\n\tnew Sample().call();\n})();"],"sourceRoot":"SORUCE_DIR"}